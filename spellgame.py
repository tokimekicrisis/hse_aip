from source import *
from random import choice, sample

words_dict = {"а": ["сп_сибо", "_льбом", "м_шина",
                    "к_рандаш", "кр_пива", "кар_ндаш",
                    "тр_ва", "ск_зать", "к_чели",
                    "с_довник", "сд_вать", "б_лкон",
                    "ст_тья", "_птека", "к_као",
                    "л_пша", "к_никулы", "б_рсук",
                    "л_донь", "к_стрюля", "ф_милия",
                    "сн_чала", "сначал_", "_бзац", "б_тон"],
              "о": ["гр_за", "к_рова", "к_тёнок",
                    "тр_па", "б_льной", "м_локо",
                    "в_лна", "н_чной", "мол_ко",
                    "зд_ровье", "гор_д", "_твет",
                    "к_за", "к_мпьютер", "п_душка",
                    "д_ждливый", "п_ход", "т_пор",
                    "с_сна", "_кно", "_бед",
                    "_кеан", "_вца", "хор_шо", "х_рошо"],
              "и": ["св_нья", "ч_сло", "т_шина",
                    "кр_чать", "ключ_к", "ж_раф",
                    "обо_", "скр_петь", "л_сток",
                    "гр_мёр", "л_фтёр", "т_хоня",
                    "изв_нять", "про_грать", "с_няк",
                    "дв_жение", "в_негрет", "св_репый",
                    "ф_гура", "л_сичка", "пом_дор",
                    "м_нута", "ф_олетовый", "л_ловый", "ч_нить"],
              "е": ["зв_зда", "т_пло", "р_ка",
                    "д_ловой", "д_ревья", "ш_птать",
                    "б_жать", "в_дро", "б_леть",
                    "д_шёвый", "пч_ла", "сл_за",
                    "м_тла", "бр_вно", "ст_кло",
                    "оз_ро", "пт_нцы", "з_мля",
                    "замоч_к", "с_нтябрь", "з_лёный",
                    "сн_жинка", "св_ча", "л_сной", "л_гко"]}


class SpellGame:
    """
    Поле для игры №4 (на орфографию).
    Игроку показаны три слова с пропусками, он вводит, какая буква должна быть на месте всех трех пропусков.

    Attributes:
        letter (str): Загаданная буква.
        words (list): Слова для данного раунда.
        lives (int): Количество остающихся жизней.
        score (int): Счет.
        multiplier (int): Множитель, на который домножаются очки игрока. Увеличивается с продолжительностью игры.

    """
    def __init__(self):
        """
        Создает поле. Загаданная буква случайно выбрана из А, О, И, Е.
        Загаданные слова - три случайно выбранных из списка слов с соответствующей буквой.
        Жизней 5, множитель = 1, счет = 0.
        """
        self.letter = choice("аоие")
        self.words = [i.upper() for i in sample(words_dict[self.letter], 3)]
        self.lives = 5
        self.score, self.multiplier = 0, 1

    def refresh(self):
        """
        Обновляет данные (генерирует новые букву и слова).
        По факту начинает новый раунд.
        """
        self.letter = choice("аоие")
        self.words = [i.upper() for i in sample(words_dict[self.letter], 3)]

    def print_words(self, screen, myfont):
        """
        Выводит слова на экран.

        Args:
            screen (pygame.Surface): Экран.
            myfont (pygame.font.Font): Используемый шрифт.
        """
        pygame.draw.rect(screen, (0, 0, 0), pygame.Rect(175, 150, 150, 150))
        for i in range(3):
            print_ui(screen, myfont, self.words[i], 250, 200 + i * 25, (255, 255, 255))

    def check_answer(self, screen, myfont1, myfont2, key):
        """
        Принимает ответ и проверяет его.
        Если ответ верный - буква выводится на экран зеленым,
        игроку начисляются очки.
        Если неверный - буква выводится на экран красным,
        игрок теряет жизнь.

        Args:
            screen (pygame.Surface): Экран.
            myfont1 (pygame.font.Font): Шрифт для надписей "Правильно!" и "Неправильно!"
            myfont2 (pygame.font.Font): Шрифт для введенной буквы.
            key (str): Введенная буква.
        """
        found = False
        pygame.draw.rect(screen, (0, 0, 0), pygame.Rect(200, 435, 300, 30))
        pygame.draw.rect(screen, (0, 0, 0), pygame.Rect(200, 275, 100, 100))
        if key == self.letter:
            color = (0, 255, 0)
            print_ui(screen, myfont2, "  Правильно!", 400, 450, color)
            self.score += 50 * self.multiplier
            pygame.draw.rect(screen, (0, 0, 0), pygame.Rect(280, 460, 200, 50))
            print_ui(screen, myfont2, ("Счёт: " + str(self.score)).rjust(11), 400, 475, (255, 255, 255))
            found = True
        else:
            color = (255, 0, 0)
            print_ui(screen, myfont2, "Неправильно!", 400, 450, color)
            self.lives -= 1
            pygame.draw.rect(screen, (0, 0, 0), pygame.Rect(0, 450, 200, 100))
            print_ui(screen, myfont2, "Жизней: " + str(self.lives), 85, 475, (255, 255, 255))
        print_ui(screen, myfont1, key.upper(), 250, 350, color)
        return found


